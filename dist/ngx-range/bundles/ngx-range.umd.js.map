{"version":3,"file":"ngx-range.umd.js","sources":["../../../projects/ngx-range/src/lib/ngx-range.component.ts","../../../projects/ngx-range/src/lib/ngx-range.module.ts","../../../projects/ngx-range/src/lib/range-validator.ts","../../../projects/ngx-range/src/public-api.ts","../../../projects/ngx-range/src/ngx-range.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, forwardRef, HostBinding, Input, OnChanges, OnDestroy, OnInit, Optional, Self, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, FormBuilder, FormControl, FormGroup, NgControl } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\ntype selectOptions = { firstOptions: [{ value: unknown, name: string }], secondOptions: [{ value: unknown, name: string }] };\ntype selectValues = { selectFirst: unknown, selectSecond: unknown };\n\n@Component({\n  selector: 'ngx-range',\n  template: `\n   varmı{{\n    rangeGroup.errors?.length\n\n   }}\n\n   {{invalid}}\n   <div role=\"group\" [formGroup]='rangeGroup' [ngClass]=\"{error: invalid}\">\n    <mat-form-field appearance=\"outline\">\n        <mat-select formControlName=\"selectFirst\">\n          <mat-option *ngFor=\"let option of selectOptions.firstOptions\" [value]=\"option.value\">{{option.name}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\" class=\"select-second\">\n        <mat-select formControlName=\"selectSecond\">\n          <mat-option *ngFor=\"let option of selectOptions.secondOptions\" [value]=\"option.value\">{{option.name}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n  </div>\n`,\n  styles: [\n    `div{\n      display: flex;\n    }\n    .select-second{\n      padding-left: 5px;\n    }\n    .error{\n      color: red;\n    }\n    `\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxRangeComponent implements OnInit, OnDestroy, ControlValueAccessor, OnChanges {\n\n  static nextId = 0;\n\n  @HostBinding()\n  id = `ngx-range-${NgxRangeComponent.nextId++}`;\n\n  // private _formControlName: string;\n  // @Input()\n  // set formControlName(value) {\n  //   this._formControlName = value;\n  // }\n  // get formControlName() {\n  //   return this._formControlName;\n  // }\n\n  private _selectOptions: selectOptions;\n  @Input()\n  set selectOptions(value) {\n    this._selectOptions = value;\n  }\n  get selectOptions() {\n    return this._selectOptions;\n  }\n\n  private _value: selectValues;\n  @Input()\n  set value(value) {\n    this._value = value;\n  }\n  get value() {\n    return this._value;\n  }\n\n  rangeGroup: FormGroup;\n\n  constructor(private _fb: FormBuilder, @Self() @Optional() public ngControl: NgControl) {\n    if (ngControl !== null) {\n      this.ngControl.valueAccessor = this;\n      this.rangeGroup = this._fb.group({\n        selectFirst: this.ngControl.value,\n        selectSecond: null\n      });\n    }\n\n  }\n\n  onChange;\n  onTouched;\n\n  ngOnInit(): void {\n    this.rangeGroup.valueChanges.pipe(\n      debounceTime(300),\n    ).subscribe(formValues => {\n      if (formValues.selectFirst !== null && formValues.selectSecond !== null) {\n        this.onChange(formValues);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.value?.previousValue !== changes.value?.currentValue) {\n      debugger;\n      this.rangeGroup.patchValue(changes.value.currentValue);\n    }\n  }\n\n  get invalid() {\n    return this.ngControl.control.errors;\n  }\n\n\n  writeValue(obj: any): void {\n    this.value = obj;\n    if (obj?.selectFirst) {\n      this.rangeGroup.patchValue({\n        selectFirst: obj.selectFirst});\n    }\n    if (obj?.selectSecond) {\n      this.rangeGroup.patchValue({\n       selectSecond: obj.selectSecond});\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    isDisabled ? this.rangeGroup.disable() : this.rangeGroup.enable();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxRangeComponent } from './ngx-range.component';\nimport { MatSelectModule } from '@angular/material/select';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [NgxRangeComponent],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    MatSelectModule,\n    CommonModule\n  ],\n  exports: [NgxRangeComponent]\n})\nexport class NgxRangeModule { }\n","import { AbstractControl, ValidatorFn, ValidationErrors } from '@angular/forms';\n\nexport class RangeValidators {\n\n    static largerSecond(control: AbstractControl): ValidationErrors | null {\n        return RangeValidators.compare('largerSecond')(control);\n    }\n\n    static largerFirst(control: AbstractControl): ValidationErrors | null {\n        return RangeValidators.compare('largerFirst')(control);\n    }\n\n    static compare(type: string): ValidatorFn {\n        return (control: AbstractControl): ValidationErrors | null => {\n            if (type === 'largerSecond') {\n                debugger;\n                if (control.value?.firstValue > control.value?.secondValue) {\n                    debugger;\n\n                    return { largerSecond: true };\n                }\n            } else if (type === 'largerFirst') {\n                if (control.value?.secondValue > control.value?.firstValue) {\n                    return { largerFirst: true };\n                }\n            }\n            return null;\n        };\n    }\n}\n","/*\n * Public API Surface of ngx-range\n */\n\nexport * from './lib/ngx-range.component';\nexport * from './lib/ngx-range.module';\nexport * from './lib/range-validator';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵproperty","i0.ɵɵadvance","i0.ɵɵtextInterpolate","debounceTime","i0.ɵɵtemplate","i0.ɵɵtextInterpolate2","Component","ChangeDetectionStrategy","Self","Optional","HostBinding","Input","FormsModule","ReactiveFormsModule","MatSelectModule","CommonModule","NgModule"],"mappings":"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"}