{"version":3,"file":"ngx-range.js","sources":["../../../projects/ngx-range/src/lib/ngx-range.component.ts","../../../projects/ngx-range/src/lib/ngx-range.module.ts","../../../projects/ngx-range/src/lib/range-validator.ts","../../../projects/ngx-range/src/public-api.ts","../../../projects/ngx-range/src/ngx-range.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, forwardRef, HostBinding, Input, OnChanges, OnDestroy, OnInit, Optional, Self, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, FormBuilder, FormControl, FormGroup, NgControl } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\ntype selectOptions = { firstOptions: [{ value: unknown, name: string }], secondOptions: [{ value: unknown, name: string }] };\ntype selectValues = { selectFirst: unknown, selectSecond: unknown };\n\n@Component({\n  selector: 'ngx-range',\n  template: `\n   varmı{{\n    rangeGroup.errors?.length\n\n   }}\n\n   {{invalid}}\n   <div role=\"group\" [formGroup]='rangeGroup' [ngClass]=\"{error: invalid}\">\n    <mat-form-field appearance=\"outline\">\n        <mat-select formControlName=\"selectFirst\">\n          <mat-option *ngFor=\"let option of selectOptions.firstOptions\" [value]=\"option.value\">{{option.name}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\" class=\"select-second\">\n        <mat-select formControlName=\"selectSecond\">\n          <mat-option *ngFor=\"let option of selectOptions.secondOptions\" [value]=\"option.value\">{{option.name}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n  </div>\n`,\n  styles: [\n    `div{\n      display: flex;\n    }\n    .select-second{\n      padding-left: 5px;\n    }\n    .error{\n      color: red;\n    }\n    `\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxRangeComponent implements OnInit, OnDestroy, ControlValueAccessor, OnChanges {\n\n  static nextId = 0;\n\n  @HostBinding()\n  id = `ngx-range-${NgxRangeComponent.nextId++}`;\n\n  // private _formControlName: string;\n  // @Input()\n  // set formControlName(value) {\n  //   this._formControlName = value;\n  // }\n  // get formControlName() {\n  //   return this._formControlName;\n  // }\n\n  private _selectOptions: selectOptions;\n  @Input()\n  set selectOptions(value) {\n    this._selectOptions = value;\n  }\n  get selectOptions() {\n    return this._selectOptions;\n  }\n\n  private _value: selectValues;\n  @Input()\n  set value(value) {\n    this._value = value;\n  }\n  get value() {\n    return this._value;\n  }\n\n  rangeGroup: FormGroup;\n\n  constructor(private _fb: FormBuilder, @Self() @Optional() public ngControl: NgControl) {\n    if (ngControl !== null) {\n      this.ngControl.valueAccessor = this;\n      this.rangeGroup = this._fb.group({\n        selectFirst: this.ngControl.value,\n        selectSecond: null\n      });\n    }\n\n  }\n\n  onChange;\n  onTouched;\n\n  ngOnInit(): void {\n    this.rangeGroup.valueChanges.pipe(\n      debounceTime(300),\n    ).subscribe(formValues => {\n      if (formValues.selectFirst !== null && formValues.selectSecond !== null) {\n        this.onChange(formValues);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.value?.previousValue !== changes.value?.currentValue) {\n      debugger;\n      this.rangeGroup.patchValue(changes.value.currentValue);\n    }\n  }\n\n  get invalid() {\n    return this.ngControl.control.errors;\n  }\n\n\n  writeValue(obj: any): void {\n    this.value = obj;\n    if (obj?.selectFirst) {\n      this.rangeGroup.patchValue({\n        selectFirst: obj.selectFirst});\n    }\n    if (obj?.selectSecond) {\n      this.rangeGroup.patchValue({\n       selectSecond: obj.selectSecond});\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    isDisabled ? this.rangeGroup.disable() : this.rangeGroup.enable();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxRangeComponent } from './ngx-range.component';\nimport { MatSelectModule } from '@angular/material/select';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [NgxRangeComponent],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    MatSelectModule,\n    CommonModule\n  ],\n  exports: [NgxRangeComponent]\n})\nexport class NgxRangeModule { }\n","import { AbstractControl, ValidatorFn, ValidationErrors } from '@angular/forms';\n\nexport class RangeValidators {\n\n    static largerSecond(control: AbstractControl): ValidationErrors | null {\n        return RangeValidators.compare('largerSecond')(control);\n    }\n\n    static largerFirst(control: AbstractControl): ValidationErrors | null {\n        return RangeValidators.compare('largerFirst')(control);\n    }\n\n    static compare(type: string): ValidatorFn {\n        return (control: AbstractControl): ValidationErrors | null => {\n            if (type === 'largerSecond') {\n                debugger;\n                if (control.value?.firstValue > control.value?.secondValue) {\n                    debugger;\n\n                    return { largerSecond: true };\n                }\n            } else if (type === 'largerFirst') {\n                if (control.value?.secondValue > control.value?.firstValue) {\n                    return { largerFirst: true };\n                }\n            }\n            return null;\n        };\n    }\n}\n","/*\n * Public API Surface of ngx-range\n */\n\nexport * from './lib/ngx-range.component';\nexport * from './lib/ngx-range.module';\nexport * from './lib/range-validator';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵproperty","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵtemplate","i0.ɵɵtextInterpolate2"],"mappings":"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"}